# Example configuration file for smaxLogger
#
# Author: Attila Kovacs
# Date: 2023 November 4
# ----------------------------------------------------------------------------
#
# Each line may set a configuration option for smaxLogger. The leading word in
# the line specifies the option followed by one or more words that set values
# for it. Lines starting with '#' are ignored, and can be used for comments.
#
# SMA-X variables can be specified individually or via glob patterns, 
# similarly to how they are used in UNIX shells. For more details on using glob
# patterns, see 
#
#   https://man7.org/linux/man-pages/man7/glob.7.html
#
# Timescales may be specified by a numeric value (integer or decimal) followed 
# immediately by a unit designator, such as '1d' for one day. Alternatively, 
# the value 'none' can be used to disable a timescale-specific option. The 
# following timescale units are understood:
#    
#   s      second(s)
#   m      minute(s)
#   h      hour(s)
#   d      day(s)
#   w      week(s)
#   y      year(s)
#
# 'include', 'exclude', and 'sample' options are order-sensitive. When more 
# than one conflicting setting pattern matches an SMA-X variable, then the last
# matching pattern is applied. Thus the following configuration lines:
#
#   exlude *
#   include myvars:*
#
# will result in only the SMA-X variables under the root 'myvars' being 
# logged. Similarly if several 'sample' directives have been defined, the last
# one defined will be the one used.
#
# The configuration file can be loaded via the '-c' option to smaxValue, e.g,:
#
#   $ smaxValue -c myconfig.cfg
#
# ----------------------------------------------------------------------------


# Set the host name or IP address of the SMA-X server (default: 'smax').
#smax_server smax

# Set the host name or IP address of the SQL server (default: 'localhost').
#sql_server localhost

# Set the SQL database name (default: 'smax_db').
#sql_db smax_db

# Set the SQL user name (default: 'smax_db').
#sql_user smax_db

# Set the SQL password (default: none).
#sql_auth my_password

# Whether to use Timescale DB hyper tables. They allow for faster access to
# time-ordered data, but not all SQL databases support it (default: 'false').
# The setting affects the creation of new SQL tables only. Tables that have
# been created before will not be altered.
#use_hyper_tables false

# Set the interval between for regular logging of recently updated variables 
# (default: 1m). See how timescales are specified at the top. 
#update_interval 1m

# Set the interval between snapshots of all variables, regardless of whether
# they have been updated recently (default: 1h). See how timescales are 
# specified at the top.
#snapshot_interval 1h

# Set the maximum byte size of variables to be logged (default: 1024). 
# Variables that would log larger data will be ignored unless they are 
# explicitly force to via an 'always' directive. For example, a variable
# that stores an array of a 100 double-precision values will require 100 * 8
# bytes of space, that is 800 bytes of storage.
#max_size 1024

# Set the maximum age of variables to be logged (default: '90d'). Variables
# that have not been updating for longer than the specified timescale will
# not be logged, unless they are forced by an 'always' directive.
#max_age	90d

# Variables and patterns to be excluded from logging. By default the patterns
# '_*' or '*:_*' (designated temporary and test tables/variables) and '*<' or
# '*:<*' (designated metadata tables/variables) will be exluded. 
#exclude _*
#exclude *:_*
#exclude <*
#exclude *:<*

# Variables and patterns to be (re)included in the logging, which may have been
# excluded by prior 'exclude' statements.
#include important:*

# You can force variables to be logged, no matter the other blocking settings
# (exclusions, size or age limits) that may apply to it, via an 'always'
# directive. It is effectively a stronger version of 'include', which overrides
# any other settings.
#always essential:*

# Set a sparse sampling for large data, so that instead of storing a large
# array of values, only every n^th value is stored in the SQL database. When
# a samping is set, the 'max_size' limit applies to the volume of the 
# selected sparse samples, rather than to the volume of the original data.
# The first argument in the downsampling factor (usually >1), followed by
# the variable name or pattern to which the sampling applies.
#sample 10 large:data:*


